import javax.sound.sampled.AudioSystem;import javax.sound.sampled.Clip;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.io.File;import java.util.Random;import java.util.Timer;import java.util.TimerTask;import java.util.stream.IntStream;public class FinalProject {    private JPanel pnlChoice;       private JPanel pnlStartScreen;  private JPanel pnlFull;       private JPanel pnlGame;    private JPanel pnlCoinToss;     private JPanel pnlDifficulty;   private JPanel pnlHow;        private JPanel pnlResults;    private JButton btn1;           private JButton btn3;           private JButton btnHowToPlay;    private JButton btn5;           private JButton btnThrow;       private JButton btnStartGame;    private JButton btn30;          private JButton btn40;          private JButton btnReset;    private JButton btn50;          private JButton btnEasy;        private JButton btnDifficult;    private JButton btnOne;         private JButton btnTwo;         private JButton btnThree;    private JButton btnFour;        private JButton btnFive;        private JButton btnSix;    private JButton btnTails;       private JButton btnHeads;       private JButton btnStart;    private JButton btnStarts;      private JButton btnQuit;    private JLabel lblCPU;          private JLabel lblDiff;         private JLabel lblPlayerShotImage;    private JLabel lblHeader;       private JLabel lblSetBalls;     private JLabel lblSetWickets;    private JLabel lblRemain;       private JLabel lblScwkt;        private JLabel lblPlayerPosition;    private JLabel lblCpuShot;      private JLabel lblTarget;       private JLabel lblScoreWicket;    private JLabel lblWickets;      private JLabel lblText;         private JLabel lblBallsRemain;    private JLabel lblGameResult;   private JLabel lblPlayer;       private JLabel lblCoin;    private JLabel lblCpuPosition;  private JLabel lblBalls;        private JLabel lblCpuShotImage;    private JLabel lblPlayerScore;  private JLabel lblCpuScore;     private JLabel lblTossResult;    int balls = 0;  int origBalls = 0;  int wickets = 0;    int origWickets = 0;    int a = 1;      boolean win;        int innings = 0;    int playerScore;    int cpuScore;    int cpuHit;     int playerHit;      int target = 0;     int results;        boolean level;    Image background;    int[] playerRuns = new int[100];    int[] cpuRuns = new int[100];    Timer timer = new Timer();    public FinalProject(){        {            playerScore = score(playerRuns);            cpuScore= score(cpuRuns);            lblPlayer.setIcon(gameResult(3));            lblCPU.setIcon(gameResult(4));            btnDifficult.setIcon(diffBtn(3));            btnEasy.setIcon(diffBtn(1));            lblPlayerPosition.setIcon(positions(1));            lblCpuPosition.setIcon(positions(2));            lblPlayerShotImage.setIcon(playerHand(0));            lblCpuShotImage.setIcon(cpuHand(0));            btnThrow.setIcon(btnThrow(1));            btnReset.setIcon(reset(1));            btnOne.setIcon(handButton(1));            btnTwo.setIcon(handButton(2));            btnThree.setIcon(handButton(3));            btnFour.setIcon(handButton(4));            btnFive.setIcon(handButton(5));            btnSix.setIcon(handButton(6));            btnStartGame.setIcon(startButtons(1));            btnStarts.setIcon(startButtons(1));            btnHowToPlay.setIcon(how(1));            btnHeads.setIcon(headsbtn(1));            btnTails.setIcon(tailsbtn(1));            btnStart.setIcon(startButton(1));            btn1.setIcon(wicketsbtn(1));            btn3.setIcon(wicketsbtn(3));            btn5.setIcon(wicketsbtn(5));            btn30.setIcon(ballsbtn(1));            btn40.setIcon(ballsbtn(3));            btn50.setIcon(ballsbtn(5));            btnQuit.setIcon(quit(1));            background = new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\cricket.jpg")                    .getImage().getScaledInstance(1150, 800, Image.SCALE_SMOOTH);            lblDiff.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\dif.png")                    .getImage().getScaledInstance(400,100,Image.SCALE_SMOOTH)));            lblScwkt.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\scwkt.png")                    .getImage().getScaledInstance(300,70,Image.SCALE_SMOOTH)));            lblRemain.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\remain.png")                    .getImage().getScaledInstance(250, 100, Image.SCALE_SMOOTH)));            lblSetBalls.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lblBalls.png")                    .getImage().getScaledInstance(250, 100, Image.SCALE_SMOOTH)));            lblSetWickets.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lblWickets.png")                    .getImage().getScaledInstance(250, 100, Image.SCALE_SMOOTH)));            lblText.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\cointosslbl.png")                    .getImage().getScaledInstance(300, 70, Image.SCALE_SMOOTH)));            lblHeader.setIcon(new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\logo.png")                    .getImage().getScaledInstance(300, 300, Image.SCALE_SMOOTH)));        }        music();        TimerTask task = new TimerTask() {            @Override            public void run() { lblCoin.setIcon(coin(a)); a++;            }        };        timer.scheduleAtFixedRate(task, 0, 200);        btnStart.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent button) {                if (wickets > 0 && balls > 0) {                    lblScoreWicket.setText("0 /"+ wickets);                    lblBallsRemain.setText(String.valueOf(balls));                    pnlChoice.setVisible(false);                    pnlGame.setVisible(true);                    lblCoin.setVisible(false);                    lblTossResult.setVisible(false);                    lblText.setVisible(false);                    lblPlayerShotImage.setIcon(playerHand(0));                    lblCpuShotImage.setIcon(cpuHand(0));                    lblScoreWicket.setText(0 +" / "+ wickets);                    if (win) {                        lblPlayerPosition.setIcon(positions(1));                        lblCpuPosition.setIcon(positions(2));                    } else {                        lblPlayerPosition.setIcon(positions(2));                        lblCpuPosition.setIcon(positions(1));                    }                    innings++;                } else {                    JOptionPane.showMessageDialog(null, "Pick Number of balls and wickets before starting!!");                }            }        });        ActionListener toss = new ActionListener() {            @Override            public void actionPerformed(ActionEvent button) {                Object actionValue = button.getSource();                lblTossResult.setVisible(true);                btnStart.setEnabled(true);                if (actionValue == btnHeads){                    timer.cancel();                    int i = randomInt();                    win = i % 2 == 0;                    lblTossResult.setIcon(tossResultHeads(win));                    lblCoin.setIcon(coin(i));                    btnHeads.setVisible(false);                    btnTails.setVisible(false);                    pnlChoice.setVisible(true);                } if (actionValue == btnTails){                    timer.cancel();                    int i = randomInt();                    win = i % 2 == 1;                    lblTossResult.setIcon(tossResultTails(win));                    lblCoin.setIcon(coin(i));                    btnHeads.setVisible(false);                    btnTails.setVisible(false);                    pnlChoice.setVisible(true);                }            }        };        ActionListener intro = new ActionListener() {            @Override            public void actionPerformed(ActionEvent button) {                Object actionValue = button.getSource();                if (actionValue == btnStartGame || actionValue == btnStarts){                    pnlStartScreen.setVisible(false);                    pnlDifficulty.setVisible(true);                    pnlHow.setVisible(false);                } if (actionValue == btnHowToPlay){                    pnlHow.setVisible(true);                    pnlStartScreen.setVisible(false);                }                if (actionValue == btnEasy){                    level= true;                    pnlDifficulty.setVisible(false);                    pnlCoinToss.setVisible(true);                } if (actionValue == btnDifficult){                    level = false;                    pnlDifficulty.setVisible(false);                    pnlCoinToss.setVisible(true);                }            }        };        ActionListener listenerBalls = new ActionListener() {            @Override            public void actionPerformed(ActionEvent button) {                Object actionValue = button.getSource();                if (actionValue == btn30){                    balls = 30;                    origBalls = 30;                }                if (actionValue == btn40){                    balls = 40;                    origBalls = 40;                }                if (actionValue == btn50){                    balls = 50;                    origBalls = 50;                }                lblBalls.setIcon(lbl(balls));            }        };        ActionListener listenerWickets = new ActionListener() {            @Override            public void actionPerformed(ActionEvent button) {                Object actionValue = button.getSource();                if (actionValue == btn1) {                    wickets = 1;                    origWickets = 1;                }                if (actionValue == btn3) {                    wickets = 3;                    origWickets = 3;                }                if (actionValue == btn5) {                    wickets = 5;                    origWickets = 5;                }                lblWickets.setIcon(lbl(wickets));            }        };        ActionListener hit = new ActionListener() {            @Override            public void actionPerformed(ActionEvent button) {                Object actionValue = button.getSource();                btnThrow.setEnabled(true);                if (actionValue == btnOne) {                    playerHit = 1;                } else if (actionValue == btnTwo) {                    playerHit = 2;                } else if (actionValue == btnThree) {                    playerHit = 3;                } else if (actionValue == btnFour) {                    playerHit = 4;                } else if (actionValue == btnFive) {                    playerHit = 5;                } else if (actionValue == btnSix) {                    playerHit = 6;                }                lblPlayerShotImage.setIcon(playerHand(0));                lblCpuShotImage.setIcon(cpuHand(0));                btnOne.setEnabled(false);                btnTwo.setEnabled(false);                btnThree.setEnabled(false);                btnFour.setEnabled(false);                btnFive.setEnabled(false);                btnSix.setEnabled(false);                btnReset.setEnabled(true);            }};        btnThrow.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                btnThrow.setEnabled(false);                btnReset.setEnabled(true);                btnOne.setEnabled(true);                btnTwo.setEnabled(true);                btnThree.setEnabled(true);                btnFour.setEnabled(true);                btnFive.setEnabled(true);                btnSix.setEnabled(true);                lblPlayerShotImage.setIcon(playerHand(playerHit));                playerScore = score(playerRuns);                cpuScore= score(cpuRuns);                if (win){                    cpuHit = randomInt();                    if (!level) {                        if (playerScore > 50) {                            cpuHit = randomIntMed(playerHit);                        }                    }                    lblCpuShotImage.setIcon(cpuHand(cpuHit));                    lblCpuShot.setIcon(shot(cpuHit));                    balls -= 1;                    playerRuns[balls] = play(playerHit, cpuHit);                    wickets = out(playerHit,cpuHit,wickets);                    lblScoreWicket.setText(IntStream.of(playerRuns).sum() +" / "+wickets);                    lblBallsRemain.setText(String.valueOf(balls));                    innings = changeInnings(wickets, balls, innings, origWickets, origBalls,lblScoreWicket, lblBallsRemain);                    win = changeInnings(wickets, balls, win);                } else {                    cpuHit =randomInt();                    if (!level) {                        if (cpuScore > 50) {                            cpuHit = randomIntMed(playerHit);                        }                    } else {                        if (cpuHit == playerHit){                            cpuHit = randomIntMed(playerHit);                        }                    }                    lblCpuShotImage.setIcon(cpuHand(cpuHit));                    lblCpuShot.setIcon(shot(cpuHit));                    origBalls -= 1;                    cpuRuns[origBalls] = play(cpuHit, playerHit);                    origWickets = out(playerHit,cpuHit,origWickets);                    lblScoreWicket.setText(IntStream.of(cpuRuns).sum() +" / "+origWickets);                    lblBallsRemain.setText(String.valueOf(origBalls));                    innings = changeInnings(origWickets, origBalls, innings,wickets, balls,lblScoreWicket, lblBallsRemain);                    win = changeInnings(origWickets, origBalls, win);                }                if (innings == 2) {                    if (win) {                        lblPlayerPosition.setIcon(positions(1));                        lblCpuPosition.setIcon(positions(2));                        target = score(cpuRuns) - score(playerRuns);                        lblTarget.setText("Player needs " + (target + 1) + " runs to win.");                    } else {                        lblPlayerPosition.setIcon(positions(2));                        lblCpuPosition.setIcon(positions(1));                        target = score(playerRuns) - score(cpuRuns);                        lblTarget.setText("CPU needs " + (target + 1) + " runs to win.");                    }                    if (target < 0) {                        innings++;                    }                }                if (innings == 3){                    pnlGame.setVisible(false);                    pnlResults.setVisible(true);                    playerScore = score(playerRuns);                    cpuScore= score(cpuRuns);                    lblPlayerScore.setText(playerScore +" total runs");                    lblCpuScore.setText((cpuScore)+" total runs");                    if (playerScore > cpuScore){                        lblGameResult.setIcon(gameResult(1));                        results = playerScore - cpuScore;                    } else if (cpuScore > playerScore){                        lblGameResult.setIcon(gameResult(2));                        results = cpuScore - playerScore;                    } else {                        lblGameResult.setIcon(gameResult(5));                    }                }            }        });        btnReset.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                lblCpuShot.setIcon(shot(0));                    lblPlayerShotImage.setIcon(playerHand(0));                    lblCpuShotImage.setIcon(cpuHand(0));                    btnOne.setEnabled(true);                    btnTwo.setEnabled(true);                    btnThree.setEnabled(true);                    btnFour.setEnabled(true);                    btnFive.setEnabled(true);                    btnSix.setEnabled(true);                    btnThrow.setEnabled(false);            }        });        btnQuit.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                System.exit(0);            }        });        MouseAdapter exit = new MouseAdapter() {            @Override            public void mouseExited(MouseEvent exit) { super.mouseExited(exit);                Object actionValue = exit.getSource();                if (actionValue == btnOne){                    btnOne.setIcon(handButton(1));                } if (actionValue == btnTwo){                    btnTwo.setIcon(handButton(2));                } if (actionValue == btnThree){                    btnThree.setIcon(handButton(3));                } if (actionValue == btnFour){                    btnFour.setIcon(handButton(4));                } if (actionValue == btnFive){                    btnFive.setIcon(handButton(5));                } if (actionValue == btnSix) {                    btnSix.setIcon(handButton(6));                }                if (actionValue == btn1){btn1.setIcon(wicketsbtn(1));                } if (actionValue == btn3){btn3.setIcon(wicketsbtn(3));                } if (actionValue == btn5){btn5.setIcon(wicketsbtn(5));                }                if (actionValue == btn30){btn30.setIcon(ballsbtn(1));                } if (actionValue == btn40){btn40.setIcon(ballsbtn(3));                } if (actionValue == btn50){btn50.setIcon(ballsbtn(5));                }                if (actionValue == btnHeads){btnHeads.setIcon(headsbtn(1));                } if (actionValue == btnTails){btnTails.setIcon(tailsbtn(1));                }                if (actionValue == btnHowToPlay){btnHowToPlay.setIcon(how(1));                } if (actionValue == btnStart){btnStart.setIcon(startButton(1));                } if (actionValue == btnStartGame){btnStartGame.setIcon(startButtons(1));                }                if (actionValue == btnReset){btnReset.setIcon(reset(1));                } if (actionValue == btnThrow){                    btnThrow.setIcon(btnThrow(1));                } if (actionValue == btnStarts){btnStarts.setIcon(startButtons(1));                }                if (actionValue == btnEasy){                    btnEasy.setIcon(diffBtn(1));                }if (actionValue == btnDifficult){                    btnDifficult.setIcon(diffBtn(3));                } if (actionValue == btnQuit){                    btnQuit.setIcon(quit(2));                }            }        };        MouseAdapter enter = new MouseAdapter() {            @Override            public void mouseEntered(MouseEvent enter) { super.mouseEntered(enter);                Object actionValue = enter.getSource();                if (actionValue == btnOne){ btnOne.setIcon(handButton(7));                }if (actionValue == btnTwo){                    btnTwo.setIcon(handButton(8));                }if (actionValue == btnThree){                    btnThree.setIcon(handButton(9));                } if (actionValue == btnFour){                    btnFour.setIcon(handButton(10));                } if (actionValue == btnFive){                    btnFive.setIcon(handButton(11));                } if (actionValue == btnSix) {                    btnSix.setIcon(handButton(12));                }                if (actionValue == btn1){                    btn1.setIcon(wicketsbtn(2));                } if (actionValue == btn3){                    btn3.setIcon(wicketsbtn(4));} if (actionValue == btn5){btn5.setIcon(wicketsbtn(6));                }                if (actionValue == btn30){btn30.setIcon(ballsbtn(2));                } if (actionValue == btn40){btn40.setIcon(ballsbtn(4));                } if (actionValue == btn50){btn50.setIcon(ballsbtn(6));                }                if (actionValue == btnHeads){btnHeads.setIcon(headsbtn(2));                } if (actionValue == btnTails){btnTails.setIcon(tailsbtn(2));                }                if (actionValue == btnHowToPlay){btnHowToPlay.setIcon(how(2));                } if (actionValue == btnStart){btnStart.setIcon(startButton(2));                } if (actionValue == btnStartGame){btnStartGame.setIcon(startButtons(2));                }                if (actionValue == btnReset){btnReset.setIcon(reset(2));                }if (actionValue == btnThrow){                    btnThrow.setIcon(btnThrow(2));                } if (actionValue == btnStarts){btnStarts.setIcon(startButtons(2));                }                if (actionValue == btnEasy){                    btnEasy.setIcon(diffBtn(2));                }if (actionValue == btnDifficult){                    btnDifficult.setIcon(diffBtn(4));                } if (actionValue == btnQuit){                    btnQuit.setIcon(quit(1));                }            }        };        { btnOne.addMouseListener(enter);        btnTwo.addMouseListener(enter);        btnThree.addMouseListener(enter);        btnFour.addMouseListener(enter);        btnFive.addMouseListener(enter);        btnSix.addMouseListener(enter);        btnOne.addMouseListener(exit);        btnTwo.addMouseListener(exit);        btnThree.addMouseListener(exit);        btnFour.addMouseListener(exit);        btnFive.addMouseListener(exit);        btnSix.addMouseListener(exit);        btnHeads.addMouseListener(enter);        btnTails.addMouseListener(enter);        btn1.addMouseListener(enter);        btn3.addMouseListener(enter);        btn30.addMouseListener(enter);        btn5.addMouseListener(enter);        btn50.addMouseListener(enter);        btnStart.addMouseListener(enter);        btn40.addMouseListener(enter);        btnStartGame.addMouseListener(enter);        btnStarts.addMouseListener(enter);        btnHowToPlay.addMouseListener(enter);        btnReset.addMouseListener(enter);        btnThrow.addMouseListener(enter);        btnEasy.addMouseListener(enter);        btnDifficult.addMouseListener(enter);        btnQuit.addMouseListener(enter);        btnHeads.addMouseListener(exit);        btnTails.addMouseListener(exit);        btn1.addMouseListener(exit);        btn3.addMouseListener(exit);        btn30.addMouseListener(exit);        btn5.addMouseListener(exit);        btn50.addMouseListener(exit);        btnStart.addMouseListener(exit);        btn40.addMouseListener(exit);        btnStartGame.addMouseListener(exit);        btnStarts.addMouseListener(exit);        btnHowToPlay.addMouseListener(exit);        btnReset.addMouseListener(exit);        btnThrow.addMouseListener(exit);        btnEasy.addMouseListener(exit);        btnDifficult.addMouseListener(exit);        btnQuit.addMouseListener(exit);}{            btnStartGame.addActionListener(intro);            btnStarts.addActionListener(intro);            btnHowToPlay.addActionListener(intro);            btnEasy.addActionListener(intro);            btnDifficult.addActionListener(intro);            btnOne.addActionListener(hit);            btnTwo.addActionListener(hit);            btnThree.addActionListener(hit);            btnFour.addActionListener(hit);            btnFive.addActionListener(hit);            btnSix.addActionListener(hit);            btnHeads.addActionListener(toss);            btnTails.addActionListener(toss);            btn40.addActionListener(listenerBalls);            btn30.addActionListener(listenerBalls);            btn50.addActionListener(listenerBalls);            btn1.addActionListener(listenerWickets);            btn3.addActionListener(listenerWickets);            btn5.addActionListener(listenerWickets);        }    }    public static void main(String [] args) {        JFrame frame = new JFrame("Mini Cricket Game");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(new Dimension(1150, 800));        frame.setLocation(new Point(300, 50));        frame.setContentPane(new FinalProject().pnlFull);        frame.setResizable(false);        frame.setVisible(true);        frame.setIconImage((new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\logo.png")                .getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH)));        frame.getIconImage();    }    public static ImageIcon playerHand(int n) {        if (n == 0) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\0.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 1) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\1.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 2) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\2.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 3) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\3.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 4) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\4.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 5) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\5.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\6.png")                    .getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH));    }    public static ImageIcon handButton(int n) {        if (n == 1) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn1.1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 2) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn2.1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 3) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn3.1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 4) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn4.1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 5) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn5.1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n ==6) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn6.1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 7) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn1.2.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 8) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn2.2.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        }else if (n == 9) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn3.2.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        }else if (n == 10) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn4.2.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 11) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn5.2.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        }            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btn6.2.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));    }    public static ImageIcon cpuHand(int n) {        if (n == 0) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\0 cpu.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 1) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\1 cpu.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 2) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\2 cpu.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 3) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\3 cpu.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 4) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\4 cpu.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else if (n == 5) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\5 cpu.png")                    .getImage().getScaledInstance(200, 170, Image.SCALE_SMOOTH));        } else            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\6 cpu.png")                    .getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH));    }    public static ImageIcon startButtons(int n) {        ImageIcon start = new ImageIcon();        if (n == 1) {           start = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Start Page Button\\start.png")                    .getImage().getScaledInstance(200, 80, Image.SCALE_SMOOTH));        } else if (n == 2) {            start = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Start Page Button\\start2.png")                    .getImage().getScaledInstance(200, 80, Image.SCALE_SMOOTH));        }        return start;    }    public static ImageIcon positions(int n) {        ImageIcon position = new ImageIcon();        if (n == 1) {            position = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\bat.png")                    .getImage().getScaledInstance(150, 60, Image.SCALE_SMOOTH));        } else if (n == 2) {            position = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\bowl.png")                    .getImage().getScaledInstance(150, 60, Image.SCALE_SMOOTH));        }        return position;    }    public static ImageIcon startButton(int n) {        ImageIcon start = new ImageIcon();        if (n == 1) {            start = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Start Page Button\\start.png")                    .getImage().getScaledInstance(170, 70, Image.SCALE_SMOOTH));        } else if (n == 2) {            start = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Start Page Button\\start2.png")                    .getImage().getScaledInstance(170, 70, Image.SCALE_SMOOTH));        }        return start;    }    public static ImageIcon quit(int n) {        ImageIcon quit = new ImageIcon();        if (n == 1) {            quit = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\quit1.png")                    .getImage().getScaledInstance(150, 70, Image.SCALE_SMOOTH));        } else if (n == 2) {            quit = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\quit.png")                    .getImage().getScaledInstance(150, 70, Image.SCALE_SMOOTH));        }        return quit;    }    public static ImageIcon how(int n) {        ImageIcon how = new ImageIcon();        if (n == 1) {            how = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Start Page Button\\how1.png")                    .getImage().getScaledInstance(270, 90, Image.SCALE_SMOOTH));        } else if (n == 2) {            how = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Start Page Button\\how2.png")                    .getImage().getScaledInstance(270, 90, Image.SCALE_SMOOTH));        }        return how;    }    public static ImageIcon coin(int i) {        if (i % 2 == 0) {            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\Heads.png")                    .getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH));        } else            return new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\Tails.png")                    .getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH));    }    public static ImageIcon reset(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\reset.png")                    .getImage().getScaledInstance(110, 55, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\reset2.png")                    .getImage().getScaledInstance(110, 55, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon btnThrow(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btnThrow.png")                    .getImage().getScaledInstance(110, 55, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\btnThrow1.png")                    .getImage().getScaledInstance(110, 55, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon headsbtn(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\headsbtn.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\headsbtn2.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon tailsbtn(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\tailsbtn.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\tailsbtn2.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon wicketsbtn(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\1.1.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\1.2.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 3) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\3.1.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        }else if (n == 4) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\3.2.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 5) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\5.1.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 6) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\5.2.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon ballsbtn(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\30.1.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\30.2.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 3) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\40.1.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        }else if (n == 4) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\40.2.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 5) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\50.1.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        } else if (n == 6) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\50.2.png")                    .getImage().getScaledInstance(55, 55, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon lbl(int n) {        ImageIcon lbl = new ImageIcon();        if (n == 1) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lbl1.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 3) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lbl3.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        } else if (n == 5) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lbl5.png")                    .getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));        }else if (n == 30) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lbl30.png")                    .getImage().getScaledInstance(50, 45, Image.SCALE_SMOOTH));        } else if (n == 40) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lbl40.png")                    .getImage().getScaledInstance(50, 45, Image.SCALE_SMOOTH));        } else if (n == 50) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lbl50.png")                    .getImage().getScaledInstance(50, 45, Image.SCALE_SMOOTH));        }        return lbl;    }    public static ImageIcon tossResultTails(boolean win) {        ImageIcon lbl;        if (win) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\winTails.png")                    .getImage().getScaledInstance(350, 80, Image.SCALE_SMOOTH));        } else {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\loseTails.png")                    .getImage().getScaledInstance(350, 80, Image.SCALE_SMOOTH));        }        return lbl;    }    public static ImageIcon tossResultHeads(boolean win) {        ImageIcon lbl;        if (win) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\winHeads.png")                    .getImage().getScaledInstance(400, 100, Image.SCALE_SMOOTH));        } else {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Coin Toss\\loseHeads.png")                    .getImage().getScaledInstance(400, 100, Image.SCALE_SMOOTH));        }        return lbl;    }    public static ImageIcon diffBtn(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\easy.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\easy2.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        } else if (n == 3){            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\difficult.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        } else if (n == 4){            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Choice Button\\difficult2.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon shot(int n) {        ImageIcon btn = new ImageIcon();        if (n == 1) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\one.png")                    .getImage().getScaledInstance(55, 60, Image.SCALE_SMOOTH));        } else if (n == 2) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\two.png")                    .getImage().getScaledInstance(55, 60, Image.SCALE_SMOOTH));        } else if (n == 3) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\three.png")                    .getImage().getScaledInstance(55, 60, Image.SCALE_SMOOTH));        }else if (n == 4) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\four.png")                    .getImage().getScaledInstance(55, 60, Image.SCALE_SMOOTH));        } else if (n == 5) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\five.png")                    .getImage().getScaledInstance(55, 60, Image.SCALE_SMOOTH));        } else if (n == 6) {            btn = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Hand Signs\\six.png")                    .getImage().getScaledInstance(55, 60, Image.SCALE_SMOOTH));        }        return btn;    }    public static ImageIcon gameResult(int n) {        ImageIcon lbl = new ImageIcon();        if (n == 1) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\win.png")                    .getImage().getScaledInstance(300, 200, Image.SCALE_SMOOTH));        } else if (n == 2) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\lose.png")                    .getImage().getScaledInstance(300, 200, Image.SCALE_SMOOTH));        } else if (n == 3) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\player.png")                    .getImage().getScaledInstance(220, 90, Image.SCALE_SMOOTH));        }else if (n == 4) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\cpu.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        }else if (n == 5) {            lbl = new ImageIcon(new ImageIcon("C:\\Users\\jadoo\\IdeaProjects\\Final Project\\Labels\\draw.png")                    .getImage().getScaledInstance(200, 70, Image.SCALE_SMOOTH));        }        return lbl;    }    public void music(){        String music = "C:\\Users\\jadoo\\IdeaProjects\\Final Project\\musicc.wav";        try {            File file = new File(music);            Clip clip = AudioSystem.getClip();            clip.open(AudioSystem.getAudioInputStream(file));            clip.start();            clip.loop(Clip.LOOP_CONTINUOUSLY);        } catch (Exception e) {            System.err.println(e.getMessage());        }    }    public static int play(int playerHit, int cpuHit) {        if (playerHit == cpuHit){            playerHit = 0;        }        return playerHit;    }    public static int out(int playerHit, int cpuHit,int wickets){        if (playerHit == cpuHit){            wickets -= 1;            JOptionPane.showMessageDialog(null, "OUT!!");        }        return wickets;    }    public static int changeInnings(int wickets, int balls , int innings, int origWickets, int origBalls, JLabel lbl, JLabel lbl1) {        if (wickets == 0 || balls == 0) {            innings++;            if (innings == 2) {                lbl.setText("0/"+origWickets);                lbl1.setText(String.valueOf(origBalls));                JOptionPane.showMessageDialog(null,"Now, switch positions", "Change Innings", JOptionPane.PLAIN_MESSAGE);            }        } return innings;    }    public static boolean changeInnings(int w, int b, boolean t) {        if ((w == 0 || b == 0) && t) {            t = false;        } else if (w == 0 || b == 0) {            t = true;        } return t;    }    public static int score(int[] runs){        return IntStream.of(runs).sum();    }    public static int randomInt() {        Random rand = new Random();        return rand.nextInt(6) + 1;    }    public static int randomIntMed(int n) {        Random rand = new Random();        if (n == 6){            n-=3;        } else if (n == 5){            n-=2;        } else if (n == 4){            n--;        }        return rand.nextInt(4) + n;    }    public static int randomIntEasy(int n) {        Random rand = new Random();        if (n == 6){            n-=2;        } else if (n == 5){            n--;        }        return rand.nextInt(3) + n;    }    private void createUIComponents() {        pnlFull = new JPanel()  {            @Override            public void paintComponent(Graphics g) {                super.paintComponent(g);                g.drawImage(background, 0, 0, pnlFull);            }        };    }}